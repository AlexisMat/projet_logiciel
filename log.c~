#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <stdbool.h>
#include <time.h>

#include "log.h"

void init_plateau(char (*plateau)[TAILLE_MAX]){
	int i,j;
	for(i=0;i<TAILLE_MAX;i++){
		for(j=0;j<TAILLE_MAX;j++){
			plateau [i][j] = '.';
		}
	}
}

void affiche_plateau(char (*plateau)[TAILLE_MAX]){
	int i,j;
	for(i=0;i<TAILLE_MAX;i++){
		for(j=0;j<TAILLE_MAX;j++){
			printf("%c",plateau [i][j]);
		}
		printf("\n");
	}
}

void maj_plateau(char (*plateau)[TAILLE_MAX], int x, int y, char joueur)
{
	plateau[x][y]=joueur;
}



int rand_a_b(){
	int j;
	srand(time(NULL));
	j= rand() %2 +1;
	return (j);
}

int init_joueur(){
	int j;
	return (j=rand_a_b());
}

void save(char (*plateau)[TAILLE_MAX],PileCoup p,FILE *sauvegarde){
	char hexa;
	int i,x;
	sauvegarde = fopen("save.txt","w");

	if (sauvegarde == NULL){
		fprintf(stderr,"Error de sauvegard\n");
		exit (1);
	}
	fputs("\\hex\n\\board\n",sauvegarde);
		for(i=0;i<TAILLE_MAX;i++){
			for(x=0;x<TAILLE_MAX;x++){
				hexa = plateau[i][x];
				fputc(hexa,sauvegarde);
				fputc('\n',sauvegarde);
			}	
		}
	if(p.c2 == -1){	
		if(p.c1 == -1){
			fputs("\\endboard\n\\endhex\n",sauvegarde);
		}else{
			fputs("\\endboard\n\\game\n",sauvegarde);
			fputs("\\play  ",sauvegarde);
			fputc(p.joueur1,sauvegarde);
			fputc(p.c1 ,sauvegarde);
			fputc(p.l1 ,sauvegarde);
			fputs("\n\\endgame\n\\endhex\n",sauvegarde);	
		}		
	}else{
		fputs("\\endboard\n\\game\n",sauvegarde);
		fputs("\\play ",sauvegarde);
		fputc(p.joueur2 ,sauvegarde);
		fputc(p.c2 ,sauvegarde);
		fputc(p.l2 ,sauvegarde);
		fputs("\n\\endgame\n\\endhex\n",sauvegarde);	
	}
	fclose(sauvegarde);
}

/*void load (char (*plateau)[TAILLE_MAX],FILE *sauvegarde){
	char balise[LECTU_MAX];
	int i=1;
	int j=1;
	char jeu;
	sauvegarde = fopen("save.txt","r");


	if (fgets(balise, LECTU_MAX, sauvegarde) == NULL){
		fprintf(stderr,"Erreur de lecture\n");
		exit (2);
	}

	if (sauvegarde == NULL){
		fprintf(stderr,"Erreur de sauvegard\n");
		exit (1);
	}else{
		while(fgets(balise, LECTU_MAX, sauvegarde) != NULL){
		
			if(strcmp(balise,"\\board")){
				do{
					jeu=fgetc(sauvegarde);
					printf("jeu : %c   ",jeu);
					plateau[i][j] = jeu;
					i++;
					j++;
					printf("on teste %d %d\n",i,j);
				}while(jeu != EOF);
			}
			fgets(balise,LECTU_MAX, sauvegarde);
			printf("%s : balise\n",balise);
		}
	}
}
	
